name: E2E Tests

on:
  push:
    branches: [main]
  pull_request:
    types: [labeled, unlabeled, opened, edited, synchronize]

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.save-matrix-value.outputs.result }}
    steps:
      - name: 🔢 Generate matrix values
        run: |
          output="["
          for i in $(seq 1 "10"); do
            output+="$i,"
          done
          output=${output%,}
          output+="]"
          echo "$output" > matrix.txt

      - name: Save matrix value
        id: save-matrix-value
        run: echo "result=$(cat matrix.txt)" >> $GITHUB_OUTPUT

  # Nonce for re-runs: https://docs.percy.io/docs/parallel-test-suites#github-actions
  nonce:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.nonce.outputs.result }}
    steps:
      - id: nonce
        run: echo "result=${{ github.run_id }}-$(date +%s)" >> $GITHUB_OUTPUT

  install:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-20.11.0-chrome-121.0.6167.184-1-ff-123.0-edge-121.0.2277.128-1
      options: --user 1001
    env:
      ENVKEY: ${{ secrets.ENVKEY }} # Set the ENVKEY environment variable for the entire job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3 # docs https://pnpm.io/continuous-integration#github-actions
        with:
          version: 9

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Install dependencies
        # with Cypress GitHub Action.
        # Calling the Cypress GitHub Action causes all dependencies from
        # the root of the pnpm workspace
        # to be installed AND it automatically caches the Cypress binary.
        uses: cypress-io/github-action@v6
        with:
          runTests: false

      # report machine parameters
      - name: 🔍 Print Cypress info
        working-directory: apps/web
        run: pnpm cypress info

  wait-for-preview:
    uses: ./.github/workflows/wait-for-preview.yml
    with:
      provider: 'netlify'
      # provider: 'vercel'
    secrets:
      NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    needs:
      - install

  ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-20.11.0-chrome-121.0.6167.184-1-ff-123.0-edge-121.0.2277.128-1
      options: --user 1001
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'qa-ready') }}
    needs:
      - generate-matrix
      - wait-for-preview
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3 # docs https://pnpm.io/continuous-integration#github-actions
        with:
          version: 9

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        # with Cypress GitHub Action.
        # Calling the Cypress GitHub Action causes all dependencies from
        # the root of the pnpm workspace
        # to be installed AND it automatically caches the Cypress binary.
        uses: cypress-io/github-action@v6
        with:
          runTests: false

      - name: 🔓 Decrypt Vercel JWT
        if: ${{ env.PASSPHRASE && needs.wait-for-preview.outputs.encrypted-vercel-jwt }}
        id: decrypt-vercel-jwt
        env:
          PASSPHRASE: ${{ secrets.PGP_SECRET_SIGNING_PASSPHRASE }}
          ENCRYPTED_JWT: ${{ needs.wait-for-preview.outputs.encrypted-vercel-jwt }}
        run: |
          echo $ENCRYPTED_JWT | base64 --decode > encrypted_jwt
          decrypted_jwt=$(gpg --decrypt --quiet --batch --passphrase "${{ env.PASSPHRASE }}" --output - encrypted_jwt)
          echo "::add-mask::$decrypted_jwt"
          echo "decrypted-jwt=$decrypted_jwt" >> $GITHUB_OUTPUT

      - name: Debug output
        run: |
          echo "Using Preview URL: ${{needs.wait-for-preview.outputs.preview-url}}"

      - name: 'Website Tests - Chrome'
        uses: cypress-io/github-action@v6
        with:
          install: false
          working-directory: apps/web
          browser: chrome
          parallel: true
          group: 'UI - Chrome'
          record: true
        env:
          SITE: ${{ secrets.SITE }}
          CYPRESS_BASE_URL: ${{ needs.wait-for-preview.outputs.preview-url }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          VERCEL_JWT: _vercel_jwt=${{ steps.decrypt-vercel-jwt.outputs.decrypted-jwt }}
          COMMIT_INFO_BRANCH: ${{ github.head_ref }}
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          COMMIT_INFO_AUTHOR: ${{ github.triggering_actor }}
          # Recommended: passing the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ui-chrome-percy-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-20.11.0-chrome-121.0.6167.184-1-ff-123.0-edge-121.0.2277.128-1
      options: --user 1001
    if: ${{ contains(github.event.pull_request.labels.*.name, 'qa-ready') }}
    needs:
      - generate-matrix
      - wait-for-preview
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3 # docs https://pnpm.io/continuous-integration#github-actions
        with:
          version: 9

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        # with Cypress GitHub Action.
        # Calling the Cypress GitHub Action causes all dependencies from
        # the root of the pnpm workspace
        # to be installed AND it automatically caches the Cypress binary.
        uses: cypress-io/github-action@v6
        with:
          runTests: false

      - name: 🔓 Decrypt Vercel JWT
        if: ${{ env.PASSPHRASE && needs.wait-for-preview.outputs.encrypted-vercel-jwt }}
        id: decrypt-vercel-jwt
        env:
          PASSPHRASE: ${{ secrets.PGP_SECRET_SIGNING_PASSPHRASE }}
          ENCRYPTED_JWT: ${{ needs.wait-for-preview.outputs.encrypted-vercel-jwt }}
        run: |
          echo $ENCRYPTED_JWT | base64 --decode > encrypted_jwt
          decrypted_jwt=$(gpg --decrypt --quiet --batch --passphrase "${{ env.PASSPHRASE }}" --output - encrypted_jwt)
          echo "::add-mask::$decrypted_jwt"
          echo "decrypted-jwt=$decrypted_jwt" >> $GITHUB_OUTPUT

      - name: 'Website Tests - Chrome'
        uses: cypress-io/github-action@v6
        with:
          command-prefix: 'percy exec -- npx'
          install: false
          working-directory: apps/web
          browser: chrome
          parallel: true
          group: 'UI - Chrome'
          record: true
        env:
          SITE: ${{ secrets.SITE }}
          CYPRESS_BASE_URL: ${{ needs.wait-for-preview.outputs.preview-url }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          VERCEL_JWT: _vercel_jwt=${{ steps.decrypt-vercel-jwt.outputs.decrypted-jwt }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PERCY_PARALLEL_NONCE: ${{ needs.nonce.outputs.result }}
          PERCY_PARALLEL_TOTAL: 10
          COMMIT_INFO_BRANCH: ${{ github.head_ref }}
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          COMMIT_INFO_AUTHOR: ${{ github.triggering_actor }}
          # Recommended: passing the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}

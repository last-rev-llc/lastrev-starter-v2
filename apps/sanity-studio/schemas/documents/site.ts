import { defineType, defineField } from 'sanity'
import { validateIn } from '../utils/validation'

export const siteType = defineType({
  type: 'document',
  name: 'site',
  title: 'Site - Settings',
  description: '',
  fields: [
    defineField({name: 'internalTitle', type: 'string', title: 'Internal title', hidden: false}),
    defineField({
      name: 'siteKey',
      type: 'string',
      title: 'Site Key',
      hidden: false,
      description:
        'This key is used to identify which site to apply the configuration options defined in this item. ',
      validation: (Rule) =>
        Rule.required().custom((value) => validateIn(['STARTER_ANYTHING'], value)),
      options: {list: ['STARTER_ANYTHING'], layout: 'dropdown'},
    }),
    defineField({
      name: 'header',
      type: 'reference',
      title: 'Header',
      hidden: false,
      to: [{type: 'header'}],
    }),
    defineField({
      name: 'footer',
      type: 'reference',
      title: 'Footer',
      hidden: false,
      to: [{type: 'footer'}],
    }),
    defineField({
      name: 'rewrites',
      type: 'array',
      of: [{type: 'reference', to: [{type: 'siteRedirect'}]}],
      title: 'Rewrites',
      hidden: false,
    }),
    defineField({
      name: 'redirects',
      type: 'array',
      of: [
        {
          type: 'reference',
          to: [
            {type: 'section'},
            {type: 'card'},
            {type: 'link'},
            {type: 'collection'},
            {type: 'contentful_text'},
            {type: 'page'},
            {type: 'hero'},
            {type: 'navigationItem'},
            {type: 'site'},
            {type: 'header'},
            {type: 'moduleIntegration'},
            {type: 'media'},
            {type: 'person'},
            {type: 'categoryBlog'},
            {type: 'template'},
            {type: 'settings'},
            {type: 'contentful_block'},
            {type: 'footer'},
            {type: 'collectionDynamic'},
            {type: 'elementForm'},
            {type: 'elementVideo'},
            {type: 'collectionExpandableItem'},
            {type: 'collectionExpandable'},
            {type: 'blog'},
            {type: 'siteRedirect'},
          ],
        },
      ],
      title: 'Redirects',
      hidden: false,
    }),
    defineField({
      name: 'theme',
      type: 'array',
      of: [
        {
          type: 'reference',
          to: [
            {type: 'section'},
            {type: 'card'},
            {type: 'link'},
            {type: 'collection'},
            {type: 'contentful_text'},
            {type: 'page'},
            {type: 'hero'},
            {type: 'navigationItem'},
            {type: 'site'},
            {type: 'header'},
            {type: 'moduleIntegration'},
            {type: 'media'},
            {type: 'person'},
            {type: 'categoryBlog'},
            {type: 'template'},
            {type: 'settings'},
            {type: 'contentful_block'},
            {type: 'footer'},
            {type: 'collectionDynamic'},
            {type: 'elementForm'},
            {type: 'elementVideo'},
            {type: 'collectionExpandableItem'},
            {type: 'collectionExpandable'},
            {type: 'blog'},
            {type: 'siteRedirect'},
          ],
        },
      ],
      title: 'Theme',
      hidden: false,
    }),
    defineField({
      type: 'boolean',
      description:
        'If this document was archived on Contentful at the time of export, the document will be in a read-only state.',
      name: 'contentfulArchived',
      readOnly: true,
    }),
  ],
  preview: {select: {title: 'internalTitle'}},
  readOnly: ({document}) => (document == null ? void 0 : document.contentfulArchived) === !0,
})
